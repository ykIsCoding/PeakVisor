import { Directive, RendererStyleFlags2 } from '@angular/core';
import { Subscription } from 'rxjs';
import * as i0 from "@angular/core";
import * as i1 from "./native-scrollbar-size-factory";
export class HideNativeScrollbar {
    constructor(el, renderer, hideNativeScrollbar) {
        this.renderer = renderer;
        this.hideNativeScrollbar = hideNativeScrollbar;
        this._subscriber = Subscription.EMPTY;
        this._subscriber = hideNativeScrollbar.scrollbarSize.subscribe((size) => {
            this.renderer.setStyle(el.nativeElement, '--native-scrollbar-size', `-${size}px`, RendererStyleFlags2.DashCase);
        });
    }
    ngOnDestroy() {
        this._subscriber.unsubscribe();
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.5", ngImport: i0, type: HideNativeScrollbar, deps: [{ token: i0.ElementRef }, { token: i0.Renderer2 }, { token: i1.NativeScrollbarSizeFactory }], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "16.1.5", type: HideNativeScrollbar, isStandalone: true, selector: "[hideNativeScrollbar]", ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.5", ngImport: i0, type: HideNativeScrollbar, decorators: [{
            type: Directive,
            args: [{
                    selector: '[hideNativeScrollbar]',
                    standalone: true
                }]
        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.Renderer2 }, { type: i1.NativeScrollbarSizeFactory }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaGlkZS1uYXRpdmUtc2Nyb2xsYmFyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LXNjcm9sbGJhci9zcmMvbGliL2hpZGUtbmF0aXZlLXNjcm9sbGJhci9oaWRlLW5hdGl2ZS1zY3JvbGxiYXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBeUIsbUJBQW1CLEVBQWEsTUFBTSxlQUFlLENBQUM7QUFDakcsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLE1BQU0sQ0FBQzs7O0FBT3BDLE1BQU0sT0FBTyxtQkFBbUI7SUFJOUIsWUFBWSxFQUFjLEVBQ04sUUFBbUIsRUFDbkIsbUJBQStDO1FBRC9DLGFBQVEsR0FBUixRQUFRLENBQVc7UUFDbkIsd0JBQW1CLEdBQW5CLG1CQUFtQixDQUE0QjtRQUpsRCxnQkFBVyxHQUFpQixZQUFZLENBQUMsS0FBSyxDQUFDO1FBSzlELElBQUksQ0FBQyxXQUFXLEdBQUcsbUJBQW1CLENBQUMsYUFBYSxDQUFDLFNBQVMsQ0FBQyxDQUFDLElBQVksRUFBRSxFQUFFO1lBQzlFLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLEVBQUUsQ0FBQyxhQUFhLEVBQUUseUJBQXlCLEVBQUUsSUFBSyxJQUFLLElBQUksRUFBRSxtQkFBbUIsQ0FBQyxRQUFRLENBQUMsQ0FBQztRQUNwSCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCxXQUFXO1FBQ1QsSUFBSSxDQUFDLFdBQVcsQ0FBQyxXQUFXLEVBQUUsQ0FBQztJQUNqQyxDQUFDOzhHQWRVLG1CQUFtQjtrR0FBbkIsbUJBQW1COzsyRkFBbkIsbUJBQW1CO2tCQUovQixTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSx1QkFBdUI7b0JBQ2pDLFVBQVUsRUFBRSxJQUFJO2lCQUNqQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgRWxlbWVudFJlZiwgUmVuZGVyZXIyLCBSZW5kZXJlclN0eWxlRmxhZ3MyLCBPbkRlc3Ryb3kgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgU3Vic2NyaXB0aW9uIH0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7IE5hdGl2ZVNjcm9sbGJhclNpemVGYWN0b3J5IH0gZnJvbSAnLi9uYXRpdmUtc2Nyb2xsYmFyLXNpemUtZmFjdG9yeSc7XHJcblxyXG5ARGlyZWN0aXZlKHtcclxuICBzZWxlY3RvcjogJ1toaWRlTmF0aXZlU2Nyb2xsYmFyXScsXHJcbiAgc3RhbmRhbG9uZTogdHJ1ZVxyXG59KVxyXG5leHBvcnQgY2xhc3MgSGlkZU5hdGl2ZVNjcm9sbGJhciBpbXBsZW1lbnRzIE9uRGVzdHJveSB7XHJcblxyXG4gIHByaXZhdGUgcmVhZG9ubHkgX3N1YnNjcmliZXI6IFN1YnNjcmlwdGlvbiA9IFN1YnNjcmlwdGlvbi5FTVBUWTtcclxuXHJcbiAgY29uc3RydWN0b3IoZWw6IEVsZW1lbnRSZWYsXHJcbiAgICAgICAgICAgICAgcHJpdmF0ZSByZW5kZXJlcjogUmVuZGVyZXIyLFxyXG4gICAgICAgICAgICAgIHByaXZhdGUgaGlkZU5hdGl2ZVNjcm9sbGJhcjogTmF0aXZlU2Nyb2xsYmFyU2l6ZUZhY3RvcnkpIHtcclxuICAgIHRoaXMuX3N1YnNjcmliZXIgPSBoaWRlTmF0aXZlU2Nyb2xsYmFyLnNjcm9sbGJhclNpemUuc3Vic2NyaWJlKChzaXplOiBudW1iZXIpID0+IHtcclxuICAgICAgdGhpcy5yZW5kZXJlci5zZXRTdHlsZShlbC5uYXRpdmVFbGVtZW50LCAnLS1uYXRpdmUtc2Nyb2xsYmFyLXNpemUnLCBgLSR7IHNpemUgfXB4YCwgUmVuZGVyZXJTdHlsZUZsYWdzMi5EYXNoQ2FzZSk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIG5nT25EZXN0cm95KCk6IHZvaWQge1xyXG4gICAgdGhpcy5fc3Vic2NyaWJlci51bnN1YnNjcmliZSgpO1xyXG4gIH1cclxufVxyXG4iXX0=