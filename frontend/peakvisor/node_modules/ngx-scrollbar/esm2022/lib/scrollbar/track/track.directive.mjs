import { Directive, Inject } from '@angular/core';
import { DOCUMENT } from '@angular/common';
import { TrackAdapter } from './track';
import * as i0 from "@angular/core";
import * as i1 from "../../ng-scrollbar-base";
export class TrackXDirective extends TrackAdapter {
    get pageProperty() {
        return 'pageX';
    }
    get offset() {
        return this.clientRect.left;
    }
    get size() {
        return this.trackElement.clientWidth;
    }
    constructor(cmp, trackElement, document) {
        super(cmp, trackElement.nativeElement, document);
        this.cmp = cmp;
        this.document = document;
    }
    mapToScrollToOption(value) {
        return { left: value };
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.5", ngImport: i0, type: TrackXDirective, deps: [{ token: i1.NgScrollbarBase }, { token: i0.ElementRef }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "16.1.5", type: TrackXDirective, isStandalone: true, selector: "[scrollbarTrackX]", usesInheritance: true, ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.5", ngImport: i0, type: TrackXDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[scrollbarTrackX]',
                    standalone: true
                }]
        }], ctorParameters: function () { return [{ type: i1.NgScrollbarBase }, { type: i0.ElementRef }, { type: Document, decorators: [{
                    type: Inject,
                    args: [DOCUMENT]
                }] }]; } });
export class TrackYDirective extends TrackAdapter {
    get pageProperty() {
        return 'pageY';
    }
    get offset() {
        return this.clientRect.top;
    }
    get size() {
        return this.trackElement.clientHeight;
    }
    constructor(cmp, trackElement, document) {
        super(cmp, trackElement.nativeElement, document);
        this.cmp = cmp;
        this.document = document;
    }
    mapToScrollToOption(value) {
        return { top: value };
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.1.5", ngImport: i0, type: TrackYDirective, deps: [{ token: i1.NgScrollbarBase }, { token: i0.ElementRef }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive }); }
    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "16.1.5", type: TrackYDirective, isStandalone: true, selector: "[scrollbarTrackY]", usesInheritance: true, ngImport: i0 }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.1.5", ngImport: i0, type: TrackYDirective, decorators: [{
            type: Directive,
            args: [{
                    selector: '[scrollbarTrackY]',
                    standalone: true
                }]
        }], ctorParameters: function () { return [{ type: i1.NgScrollbarBase }, { type: i0.ElementRef }, { type: Document, decorators: [{
                    type: Inject,
                    args: [DOCUMENT]
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhY2suZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LXNjcm9sbGJhci9zcmMvbGliL3Njcm9sbGJhci90cmFjay90cmFjay5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBYyxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQzNDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxTQUFTLENBQUM7OztBQU92QyxNQUFNLE9BQU8sZUFBZ0IsU0FBUSxZQUFZO0lBRS9DLElBQUksWUFBWTtRQUNkLE9BQU8sT0FBTyxDQUFDO0lBQ2pCLENBQUM7SUFFRCxJQUFJLE1BQU07UUFDUixPQUFPLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxDQUFDO0lBQzlCLENBQUM7SUFFRCxJQUFJLElBQUk7UUFDTixPQUFPLElBQUksQ0FBQyxZQUFZLENBQUMsV0FBVyxDQUFDO0lBQ3ZDLENBQUM7SUFFRCxZQUFzQixHQUFvQixFQUFFLFlBQXdCLEVBQThCLFFBQWtCO1FBQ2xILEtBQUssQ0FBQyxHQUFHLEVBQUUsWUFBWSxDQUFDLGFBQWEsRUFBRSxRQUFRLENBQUMsQ0FBQztRQUQ3QixRQUFHLEdBQUgsR0FBRyxDQUFpQjtRQUF3RCxhQUFRLEdBQVIsUUFBUSxDQUFVO0lBRXBILENBQUM7SUFFUyxtQkFBbUIsQ0FBQyxLQUFhO1FBQ3pDLE9BQU8sRUFBRSxJQUFJLEVBQUUsS0FBSyxFQUFFLENBQUM7SUFDekIsQ0FBQzs4R0FwQlUsZUFBZSwyRUFjb0QsUUFBUTtrR0FkM0UsZUFBZTs7MkZBQWYsZUFBZTtrQkFKM0IsU0FBUzttQkFBQztvQkFDVCxRQUFRLEVBQUUsbUJBQW1CO29CQUM3QixVQUFVLEVBQUUsSUFBSTtpQkFDakI7OzBCQWV3RSxNQUFNOzJCQUFDLFFBQVE7O0FBYXhGLE1BQU0sT0FBTyxlQUFnQixTQUFRLFlBQVk7SUFFL0MsSUFBSSxZQUFZO1FBQ2QsT0FBTyxPQUFPLENBQUM7SUFDakIsQ0FBQztJQUVELElBQUksTUFBTTtRQUNSLE9BQU8sSUFBSSxDQUFDLFVBQVUsQ0FBQyxHQUFHLENBQUM7SUFDN0IsQ0FBQztJQUVELElBQUksSUFBSTtRQUNOLE9BQU8sSUFBSSxDQUFDLFlBQVksQ0FBQyxZQUFZLENBQUM7SUFDeEMsQ0FBQztJQUVELFlBQXNCLEdBQW9CLEVBQUUsWUFBd0IsRUFBOEIsUUFBa0I7UUFDbEgsS0FBSyxDQUFDLEdBQUcsRUFBRSxZQUFZLENBQUMsYUFBYSxFQUFFLFFBQVEsQ0FBQyxDQUFDO1FBRDdCLFFBQUcsR0FBSCxHQUFHLENBQWlCO1FBQXdELGFBQVEsR0FBUixRQUFRLENBQVU7SUFFcEgsQ0FBQztJQUVTLG1CQUFtQixDQUFDLEtBQWE7UUFDekMsT0FBTyxFQUFFLEdBQUcsRUFBRSxLQUFLLEVBQUUsQ0FBQztJQUN4QixDQUFDOzhHQXBCVSxlQUFlLDJFQWNvRCxRQUFRO2tHQWQzRSxlQUFlOzsyRkFBZixlQUFlO2tCQUozQixTQUFTO21CQUFDO29CQUNULFFBQVEsRUFBRSxtQkFBbUI7b0JBQzdCLFVBQVUsRUFBRSxJQUFJO2lCQUNqQjs7MEJBZXdFLE1BQU07MkJBQUMsUUFBUSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IERpcmVjdGl2ZSwgRWxlbWVudFJlZiwgSW5qZWN0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IERPQ1VNRU5UIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuaW1wb3J0IHsgVHJhY2tBZGFwdGVyIH0gZnJvbSAnLi90cmFjayc7XHJcbmltcG9ydCB7IE5nU2Nyb2xsYmFyQmFzZSB9IGZyb20gJy4uLy4uL25nLXNjcm9sbGJhci1iYXNlJztcclxuXHJcbkBEaXJlY3RpdmUoe1xyXG4gIHNlbGVjdG9yOiAnW3Njcm9sbGJhclRyYWNrWF0nLFxyXG4gIHN0YW5kYWxvbmU6IHRydWVcclxufSlcclxuZXhwb3J0IGNsYXNzIFRyYWNrWERpcmVjdGl2ZSBleHRlbmRzIFRyYWNrQWRhcHRlciB7XHJcblxyXG4gIGdldCBwYWdlUHJvcGVydHkoKTogc3RyaW5nIHtcclxuICAgIHJldHVybiAncGFnZVgnO1xyXG4gIH1cclxuXHJcbiAgZ2V0IG9mZnNldCgpOiBudW1iZXIge1xyXG4gICAgcmV0dXJuIHRoaXMuY2xpZW50UmVjdC5sZWZ0O1xyXG4gIH1cclxuXHJcbiAgZ2V0IHNpemUoKTogbnVtYmVyIHtcclxuICAgIHJldHVybiB0aGlzLnRyYWNrRWxlbWVudC5jbGllbnRXaWR0aDtcclxuICB9XHJcblxyXG4gIGNvbnN0cnVjdG9yKHByb3RlY3RlZCBjbXA6IE5nU2Nyb2xsYmFyQmFzZSwgdHJhY2tFbGVtZW50OiBFbGVtZW50UmVmLCBASW5qZWN0KERPQ1VNRU5UKSBwcm90ZWN0ZWQgZG9jdW1lbnQ6IERvY3VtZW50KSB7XHJcbiAgICBzdXBlcihjbXAsIHRyYWNrRWxlbWVudC5uYXRpdmVFbGVtZW50LCBkb2N1bWVudCk7XHJcbiAgfVxyXG5cclxuICBwcm90ZWN0ZWQgbWFwVG9TY3JvbGxUb09wdGlvbih2YWx1ZTogbnVtYmVyKTogU2Nyb2xsVG9PcHRpb25zIHtcclxuICAgIHJldHVybiB7IGxlZnQ6IHZhbHVlIH07XHJcbiAgfVxyXG59XHJcblxyXG5ARGlyZWN0aXZlKHtcclxuICBzZWxlY3RvcjogJ1tzY3JvbGxiYXJUcmFja1ldJyxcclxuICBzdGFuZGFsb25lOiB0cnVlXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBUcmFja1lEaXJlY3RpdmUgZXh0ZW5kcyBUcmFja0FkYXB0ZXIge1xyXG5cclxuICBnZXQgcGFnZVByb3BlcnR5KCk6IHN0cmluZyB7XHJcbiAgICByZXR1cm4gJ3BhZ2VZJztcclxuICB9XHJcblxyXG4gIGdldCBvZmZzZXQoKTogbnVtYmVyIHtcclxuICAgIHJldHVybiB0aGlzLmNsaWVudFJlY3QudG9wO1xyXG4gIH1cclxuXHJcbiAgZ2V0IHNpemUoKTogbnVtYmVyIHtcclxuICAgIHJldHVybiB0aGlzLnRyYWNrRWxlbWVudC5jbGllbnRIZWlnaHQ7XHJcbiAgfVxyXG5cclxuICBjb25zdHJ1Y3Rvcihwcm90ZWN0ZWQgY21wOiBOZ1Njcm9sbGJhckJhc2UsIHRyYWNrRWxlbWVudDogRWxlbWVudFJlZiwgQEluamVjdChET0NVTUVOVCkgcHJvdGVjdGVkIGRvY3VtZW50OiBEb2N1bWVudCkge1xyXG4gICAgc3VwZXIoY21wLCB0cmFja0VsZW1lbnQubmF0aXZlRWxlbWVudCwgZG9jdW1lbnQpO1xyXG4gIH1cclxuXHJcbiAgcHJvdGVjdGVkIG1hcFRvU2Nyb2xsVG9PcHRpb24odmFsdWU6IG51bWJlcik6IFNjcm9sbFRvT3B0aW9ucyB7XHJcbiAgICByZXR1cm4geyB0b3A6IHZhbHVlIH07XHJcbiAgfVxyXG59XHJcbiJdfQ==