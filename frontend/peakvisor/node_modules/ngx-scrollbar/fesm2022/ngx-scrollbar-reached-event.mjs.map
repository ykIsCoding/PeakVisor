{"version":3,"file":"ngx-scrollbar-reached-event.mjs","sources":["../../../projects/ngx-scrollbar/reached-event/src/ng-scrollbar-reached.ts","../../../projects/ngx-scrollbar/reached-event/src/ng-scrollbar-reached.module.ts","../../../projects/ngx-scrollbar/reached-event/src/ngx-scrollbar-reached-event.ts"],"sourcesContent":["import { Directive, Optional, Input, Output, OnInit, OnDestroy, NgZone } from '@angular/core';\r\nimport { Directionality } from '@angular/cdk/bidi';\r\nimport { RtlScrollAxisType } from '@angular/cdk/platform';\r\nimport { NgScrollbar } from 'ngx-scrollbar';\r\nimport { Observable, Subject, Subscription, Subscriber, filter, map, tap, distinctUntilChanged } from 'rxjs';\r\n\r\n// Fix target type on ElementEvent\r\ntype ElementEvent = Event & { target: Element };\r\n\r\nclass ReachedFunctions {\r\n  static reachedTop(offset: number, e: ElementEvent): boolean {\r\n    return ReachedFunctions.reached(-e.target.scrollTop, 0, offset);\r\n  }\r\n\r\n  static reachedBottom(offset: number, e: ElementEvent): boolean {\r\n    return ReachedFunctions.reached(e.target.scrollTop + e.target.clientHeight, e.target.scrollHeight, offset);\r\n  }\r\n\r\n  static reachedStart(offset: number, e: ElementEvent, direction: 'ltr' | 'rtl', rtlScrollAxisType: RtlScrollAxisType): boolean {\r\n    if (direction === 'rtl') {\r\n      if (rtlScrollAxisType === RtlScrollAxisType.NEGATED) {\r\n        return ReachedFunctions.reached(e.target.scrollLeft, 0, offset);\r\n      }\r\n      if (rtlScrollAxisType === RtlScrollAxisType.INVERTED) {\r\n        return ReachedFunctions.reached(-e.target.scrollLeft, 0, offset);\r\n      }\r\n      return ReachedFunctions.reached(e.target.scrollLeft + e.target.clientWidth, e.target.scrollWidth, offset);\r\n    }\r\n    return ReachedFunctions.reached(-e.target.scrollLeft, 0, offset);\r\n  }\r\n\r\n  static reachedEnd(offset: number, e: ElementEvent, direction: 'ltr' | 'rtl', rtlScrollAxisType: RtlScrollAxisType): boolean {\r\n    if (direction === 'rtl') {\r\n      if (rtlScrollAxisType === RtlScrollAxisType.NEGATED) {\r\n        return ReachedFunctions.reached(-(e.target.scrollLeft - e.target.clientWidth), e.target.scrollWidth, offset);\r\n      }\r\n      if (rtlScrollAxisType === RtlScrollAxisType.INVERTED) {\r\n        return ReachedFunctions.reached(-(e.target.scrollLeft + e.target.clientWidth), e.target.scrollWidth, offset);\r\n      }\r\n      return ReachedFunctions.reached(-e.target.scrollLeft, 0, offset);\r\n    }\r\n    return ReachedFunctions.reached(e.target.scrollLeft + e.target.clientWidth, e.target.scrollWidth, offset);\r\n  }\r\n\r\n  static reached(currPosition: number, targetPosition: number, offset: number): boolean {\r\n    return currPosition >= targetPosition - offset;\r\n  }\r\n}\r\n\r\n@Directive()\r\nabstract class ScrollReached implements OnDestroy {\r\n\r\n  /** offset: Reached offset value in px */\r\n  @Input('reachedOffset') offset: number = 0;\r\n\r\n  /**\r\n   * Stream that emits scroll event when `NgScrollbar.scrolled` is initialized.\r\n   *\r\n   * **NOTE:** This subject is used to hold the place of `NgScrollbar.scrolled` when it's not initialized yet\r\n   */\r\n  protected scrollEvent = new Subject<ElementEvent>();\r\n\r\n  /** subscription: Scrolled event subscription, used to unsubscribe from the event on destroy */\r\n  protected subscription = Subscription.EMPTY;\r\n\r\n  /** A stream used to assign the reached output */\r\n  protected reachedEvent = new Observable((subscriber: Subscriber<ElementEvent>) =>\r\n    this.scrollReached().subscribe(_ =>\r\n      Promise.resolve().then(() => this.zone.run(() => subscriber.next(_)))));\r\n\r\n  protected constructor(@Optional() protected scrollbar: NgScrollbar, protected zone: NgZone) {\r\n    if (!scrollbar) {\r\n      console.warn('[NgScrollbarReached Directive]: Host element must be an NgScrollbar component.');\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  protected scrollReached(): Observable<ElementEvent> {\r\n    // current event\r\n    let currEvent: ElementEvent;\r\n\r\n    return this.scrollEvent.pipe(\r\n      tap((e: ElementEvent) => currEvent = e),\r\n      // Check if scroll has reached\r\n      map((e: ElementEvent) => this.reached(this.offset, e)),\r\n      // Distinct until reached value has changed\r\n      distinctUntilChanged(),\r\n      // Emit only if reached is true\r\n      filter((reached: boolean) => reached),\r\n      // Return scroll event\r\n      map(() => currEvent)\r\n    );\r\n  }\r\n\r\n  protected abstract reached(offset: number, e?: ElementEvent): boolean;\r\n}\r\n\r\n@Directive()\r\nabstract class VerticalScrollReached extends ScrollReached implements OnInit {\r\n  protected constructor(@Optional() protected scrollbar: NgScrollbar, protected zone: NgZone) {\r\n    super(scrollbar, zone);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.zone.runOutsideAngular(() => {\r\n      // Fix the viewport size in case the rendered size is not rounded\r\n      const fixedSize: number = Math.round(this.scrollbar.viewport.nativeElement.getBoundingClientRect().height);\r\n      this.scrollbar.viewport.nativeElement.style.height = `${ fixedSize }px`;\r\n\r\n      this.subscription = this.scrollbar.verticalScrolled!.subscribe(this.scrollEvent);\r\n    });\r\n  }\r\n}\r\n\r\n@Directive()\r\nabstract class HorizontalScrollReached extends ScrollReached implements OnInit {\r\n  protected constructor(@Optional() protected scrollbar: NgScrollbar, protected zone: NgZone) {\r\n    super(scrollbar, zone);\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.zone.runOutsideAngular(() => {\r\n      // Fix the viewport size in case the rendered size is not rounded\r\n      const fixedSize: number = Math.round(this.scrollbar.viewport.nativeElement.getBoundingClientRect().width);\r\n      this.scrollbar.viewport.nativeElement.style.width = `${ fixedSize }px`;\r\n\r\n      this.subscription = this.scrollbar.horizontalScrolled!.subscribe(this.scrollEvent);\r\n    });\r\n  }\r\n}\r\n\r\n@Directive({\r\n  selector: '[reachedTop], [reached-top]',\r\n  standalone: true,\r\n})\r\nexport class NgScrollbarReachedTop extends VerticalScrollReached implements OnInit {\r\n\r\n  /** Stream that emits when scroll has reached the top */\r\n  @Output() reachedTop: Observable<ElementEvent> = this.reachedEvent;\r\n\r\n  constructor(@Optional() protected scrollbar: NgScrollbar, protected zone: NgZone) {\r\n    super(scrollbar, zone);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n  }\r\n\r\n  /**\r\n   * Check if scroll has reached the top (vertically)\r\n   * @param offset Scroll offset\r\n   * @param e Scroll event\r\n   */\r\n  protected reached(offset: number, e: ElementEvent): boolean {\r\n    return ReachedFunctions.reachedTop(offset, e);\r\n  }\r\n}\r\n\r\n@Directive({\r\n  selector: '[reachedBottom], [reached-bottom]',\r\n  standalone: true,\r\n})\r\nexport class NgScrollbarReachedBottom extends VerticalScrollReached implements OnInit {\r\n\r\n  /** Stream that emits when scroll has reached the bottom */\r\n  @Output() reachedBottom: Observable<ElementEvent> = this.reachedEvent;\r\n\r\n  constructor(@Optional() protected scrollbar: NgScrollbar, protected zone: NgZone) {\r\n    super(scrollbar, zone);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n  }\r\n\r\n  /**\r\n   * Check if scroll has reached the bottom (vertically)\r\n   * @param offset Scroll offset\r\n   * @param e Scroll event\r\n   */\r\n  protected reached(offset: number, e: ElementEvent): boolean {\r\n    return ReachedFunctions.reachedBottom(offset, e);\r\n  }\r\n}\r\n\r\n@Directive({\r\n  selector: '[reachedStart], [reached-start]',\r\n  standalone: true,\r\n})\r\nexport class NgScrollbarReachedStart extends HorizontalScrollReached implements OnInit {\r\n\r\n  /** Stream that emits when scroll has reached the start */\r\n  @Output() reachedStart: Observable<ElementEvent> = this.reachedEvent;\r\n\r\n  constructor(@Optional() protected scrollbar: NgScrollbar, protected zone: NgZone, private dir: Directionality) {\r\n    super(scrollbar, zone);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n  }\r\n\r\n  /**\r\n   * Check if scroll has reached the start (horizontally)\r\n   * @param offset Scroll offset\r\n   * @param e Scroll event\r\n   */\r\n  protected reached(offset: number, e: ElementEvent): boolean {\r\n    return ReachedFunctions.reachedStart(offset, e, this.dir.value, this.scrollbar.manager.rtlScrollAxisType);\r\n  }\r\n}\r\n\r\n@Directive({\r\n  selector: '[reachedEnd], [reached-end]',\r\n  standalone: true,\r\n})\r\nexport class NgScrollbarReachedEnd extends HorizontalScrollReached implements OnInit {\r\n\r\n  /** Stream that emits when scroll has reached the end */\r\n  @Output() reachedEnd: Observable<ElementEvent> = this.reachedEvent;\r\n\r\n  constructor(@Optional() protected scrollbar: NgScrollbar, protected zone: NgZone, private dir: Directionality) {\r\n    super(scrollbar, zone);\r\n  }\r\n\r\n  ngOnInit() {\r\n    super.ngOnInit();\r\n  }\r\n\r\n  /**\r\n   * Check if scroll has reached the end (horizontally)\r\n   * @param offset Scroll offset\r\n   * @param e Scroll event\r\n   */\r\n  protected reached(offset: number, e: ElementEvent): boolean {\r\n    return ReachedFunctions.reachedEnd(offset, e, this.dir.value, this.scrollbar.manager.rtlScrollAxisType);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport {\r\n  NgScrollbarReachedTop,\r\n  NgScrollbarReachedBottom,\r\n  NgScrollbarReachedStart,\r\n  NgScrollbarReachedEnd\r\n} from './ng-scrollbar-reached';\r\n\r\n@NgModule({\r\n  imports: [\r\n    NgScrollbarReachedTop,\r\n    NgScrollbarReachedBottom,\r\n    NgScrollbarReachedStart,\r\n    NgScrollbarReachedEnd\r\n  ],\r\n  exports: [\r\n    NgScrollbarReachedTop,\r\n    NgScrollbarReachedBottom,\r\n    NgScrollbarReachedStart,\r\n    NgScrollbarReachedEnd\r\n  ]\r\n})\r\nexport class NgScrollbarReachedModule {\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}