import { NgZone, ElementRef } from '@angular/core';
import { Platform } from '@angular/cdk/platform';
import { TrackXDirective, TrackYDirective } from './track/track.directive';
import { ThumbXDirective, ThumbYDirective } from './thumb/thumb.directive';
import { NgScrollbarBase } from '../ng-scrollbar-base';
import { Scrollbar } from './scrollbar';
import * as i0 from "@angular/core";
export declare class ScrollbarY extends Scrollbar {
    cmp: NgScrollbarBase;
    protected platform: Platform;
    protected document: Document;
    protected zone: NgZone;
    readonly track: TrackYDirective | undefined;
    readonly thumb: ThumbYDirective | undefined;
    protected get viewportScrollSize(): number;
    constructor(el: ElementRef, cmp: NgScrollbarBase, platform: Platform, document: Document, zone: NgZone);
    protected setHovered(value: boolean): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<ScrollbarY, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ScrollbarY, "scrollbar-y", never, {}, {}, never, never, true, never>;
}
export declare class ScrollbarX extends Scrollbar {
    cmp: NgScrollbarBase;
    protected platform: Platform;
    protected document: Document;
    protected zone: NgZone;
    readonly track: TrackXDirective | undefined;
    readonly thumb: ThumbXDirective | undefined;
    protected get viewportScrollSize(): number;
    constructor(el: ElementRef, cmp: NgScrollbarBase, platform: Platform, document: Document, zone: NgZone);
    protected setHovered(value: boolean): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<ScrollbarX, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ScrollbarX, "scrollbar-x", never, {}, {}, never, never, true, never>;
}
