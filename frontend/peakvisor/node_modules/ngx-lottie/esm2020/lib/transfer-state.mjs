import { Injectable } from '@angular/core';
import { TransferState, makeStateKey } from '@angular/platform-browser';
import { transformAnimationFilenameToKey } from './server';
import * as i0 from "@angular/core";
import * as i1 from "@angular/platform-browser";
export class LottieTransferState {
    constructor(transferState) {
        this.transferState = transferState;
    }
    get(animation) {
        const animationKey = transformAnimationFilenameToKey(animation);
        const stateKey = makeStateKey(animationKey);
        return this.transferState.get(stateKey, null);
    }
}
/** @nocollapse */ LottieTransferState.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "15.0.0", ngImport: i0, type: LottieTransferState, deps: [{ token: i1.TransferState }], target: i0.ɵɵFactoryTarget.Injectable });
/** @nocollapse */ LottieTransferState.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "15.0.0", ngImport: i0, type: LottieTransferState, providedIn: 'root' });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "15.0.0", ngImport: i0, type: LottieTransferState, decorators: [{
            type: Injectable,
            args: [{ providedIn: 'root' }]
        }], ctorParameters: function () { return [{ type: i1.TransferState }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJhbnNmZXItc3RhdGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9saWJzL25neC1sb3R0aWUvc3JjL2xpYi90cmFuc2Zlci1zdGF0ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSxPQUFPLEVBQUUsVUFBVSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzNDLE9BQU8sRUFBRSxhQUFhLEVBQUUsWUFBWSxFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFHeEUsT0FBTyxFQUFFLCtCQUErQixFQUFFLE1BQU0sVUFBVSxDQUFDOzs7QUFHM0QsTUFBTSxPQUFPLG1CQUFtQjtJQUM5QixZQUFvQixhQUE0QjtRQUE1QixrQkFBYSxHQUFiLGFBQWEsQ0FBZTtJQUFHLENBQUM7SUFFcEQsR0FBRyxDQUFJLFNBQTRCO1FBQ2pDLE1BQU0sWUFBWSxHQUFHLCtCQUErQixDQUFDLFNBQVMsQ0FBQyxDQUFDO1FBQ2hFLE1BQU0sUUFBUSxHQUFHLFlBQVksQ0FBSSxZQUFZLENBQUMsQ0FBQztRQUMvQyxPQUFPLElBQUksQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUNoRCxDQUFDOzttSUFQVSxtQkFBbUI7dUlBQW5CLG1CQUFtQixjQUROLE1BQU07MkZBQ25CLG1CQUFtQjtrQkFEL0IsVUFBVTttQkFBQyxFQUFFLFVBQVUsRUFBRSxNQUFNLEVBQUUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBUcmFuc2ZlclN0YXRlLCBtYWtlU3RhdGVLZXkgfSBmcm9tICdAYW5ndWxhci9wbGF0Zm9ybS1icm93c2VyJztcblxuaW1wb3J0IHsgQW5pbWF0aW9uRmlsZW5hbWUgfSBmcm9tICcuL3N5bWJvbHMnO1xuaW1wb3J0IHsgdHJhbnNmb3JtQW5pbWF0aW9uRmlsZW5hbWVUb0tleSB9IGZyb20gJy4vc2VydmVyJztcblxuQEluamVjdGFibGUoeyBwcm92aWRlZEluOiAncm9vdCcgfSlcbmV4cG9ydCBjbGFzcyBMb3R0aWVUcmFuc2ZlclN0YXRlIHtcbiAgY29uc3RydWN0b3IocHJpdmF0ZSB0cmFuc2ZlclN0YXRlOiBUcmFuc2ZlclN0YXRlKSB7fVxuXG4gIGdldDxUPihhbmltYXRpb246IEFuaW1hdGlvbkZpbGVuYW1lKTogVCB8IG51bGwge1xuICAgIGNvbnN0IGFuaW1hdGlvbktleSA9IHRyYW5zZm9ybUFuaW1hdGlvbkZpbGVuYW1lVG9LZXkoYW5pbWF0aW9uKTtcbiAgICBjb25zdCBzdGF0ZUtleSA9IG1ha2VTdGF0ZUtleTxUPihhbmltYXRpb25LZXkpO1xuICAgIHJldHVybiB0aGlzLnRyYW5zZmVyU3RhdGUuZ2V0KHN0YXRlS2V5LCBudWxsKTtcbiAgfVxufVxuIl19